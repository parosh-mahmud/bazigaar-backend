# Generated by Django 4.1.10 on 2023-12-07 10:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
import user_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=-1, scale=None, size=[1920, 1080], upload_to=user_app.models.upload_to)),
                ('isHost', models.BooleanField(default=False)),
                ('first_name', models.CharField(default=' ', max_length=255)),
                ('last_name', models.CharField(default=' ', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_agent', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('nickname', models.CharField(default=' ', max_length=255)),
                ('online', models.BooleanField(default=False)),
                ('isReseller', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=7)),
                ('date_of_birth', models.DateField(null=True)),
                ('last_online', models.DateTimeField(auto_now=True)),
                ('countryCode', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('bgcoin', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('bgtoken', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('bonusbgtoken', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True)),
                ('src', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(default=user_app.models.generate_random_string, max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ResetPasswordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('wallet_id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('crypto', models.CharField(choices=[('ETH', 'eth'), ('BTC', 'btc'), ('NONE', 'none')], default='NONE', max_length=50)),
                ('crypto_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletNumbers',
            fields=[
                ('wallet_number_id', models.UUIDField(auto_created=True, primary_key=True, serialize=False)),
                ('Number', models.CharField(max_length=50)),
                ('number_type', models.CharField(choices=[('BKASH', 'bkash'), ('NAGAD', 'nagad'), ('ROCKET', 'rocket')], max_length=50)),
                ('Image', models.CharField(max_length=250, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_app.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='WalletCryptoNumbers',
            fields=[
                ('wallet_number_id', models.UUIDField(auto_created=True, primary_key=True, serialize=False)),
                ('CryptoWalletNumber', models.CharField(max_length=50)),
                ('NetworkName', models.CharField(max_length=50)),
                ('number_type', models.CharField(choices=[('BITCOIN', 'bitcoin'), ('LEETCOIN', 'leetcoin'), ('ETHERIUM', 'etherium')], max_length=50)),
                ('Image', models.CharField(max_length=250, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_app.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='WalletBankAccounts',
            fields=[
                ('wallet_number_id', models.UUIDField(auto_created=True, primary_key=True, serialize=False)),
                ('Account_Number', models.CharField(max_length=250)),
                ('Account_Holder_Name', models.CharField(max_length=250)),
                ('BankName', models.CharField(choices=[('BRAC Bank Ltd', 'BRAC Bank Ltd'), ('Islami Bank Ltd', 'Islami Bank Ltd'), ('DBBL', 'DBBL'), ('Pubali Bank Ltd', 'Pubali Bank Ltd')], max_length=250)),
                ('BranchName', models.CharField(max_length=250)),
                ('Image', models.CharField(max_length=250, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_app.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_referred', models.DateTimeField(auto_now_add=True)),
                ('referrer_code', models.CharField(max_length=10, unique=True)),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
